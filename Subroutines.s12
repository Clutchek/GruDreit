;Subroutines.s12
	USE	Labdefs.s12
;	ORG	$1000

;Startvärde till DCShadow	
start:
	;LDAB	#$FF
	LDAB	#$0
	STAB	DCShadow
	
;Läs bit som skall nollställas
Loop:	LDAB	InPort
;.... och nollställ
	;JSR	Outzero
	JSR	Outone
; Läs kopian och ...
	LDAA	DCShadow
;.... visa denna på lysdioderna
	STAA	OutPort
	
;Börja om
	JMP	start

Outzero:
	PSHX
	LDX	#Zero_tabell
	BITB	#%11111000
	BNE	Retur
	LDAA	DCShadow
	ANDA	B,X
	STAA	DCShadow
	STAA	DrillControl
	PULX
	RTS
	
Outone:
	PSHX
	LDX	#One_tabell
	BITB	#%11111000
	BNE	Retur
	LDAA	DCShadow
	ORAA	B,X
	STAA	DCShadow
	STAA	DrillControl
	PULX
	RTS
	
Retur:	RTS

MotorStart:	LDAB	#2
		LDAA	DCShadow
		BITA	#%00000100
		BNE	EndMotorStart
		JSR	Outone
		JSR	DELAY
		JSR	DELAY
EndMotorStart:
		RTS
MotorStopp:
		LDAB	#2
		JSR	Outzero
		RTS
		
DrillUp:
		LDAB	#3
		JSR	Outzero
		RTS
DrillDown:
		LDAB	#3
		JSR	Outone
		RTS
		
Alarm:
		BITB	#$FF
		BEQ	AlarmRetur
		
AlarmActivate:
		PSHB
		LDAB	#4
		JSR	Outone
		JSR	DELAY
		JSR	DELAY
		JSR	Outzero
		PULB
		DECB
		BEQ	AlarmRetur
		JSR	DELAY
		JMP	AlarmActivate
		
		
AlarmRetur:	RTS

Step:
		LDAA	DrillStatus
		BITA	#%00000010
		BEQ	StepAlarm
		JSR	Vrid1steg
		JSR	DELAY
		LDAB 	#1
		RTS
		
Vrid1steg:
		LDAB	#1
		JSR	Outone ; ettställa vridningsvinkel
		LDAB	#0
		JSR	Outone
		JSR	DELAY
		JSR	Outzero
		RTS
		
StepAlarm:
		LDAB	#2
		JSR	Alarm
		LDAB	#0
		RTS
		
DrillDownTest:
		LDAB	#10 ;retry
		
DrillTest_loop:
		LDAA	DCShadow
		BITA	#%100			;kollar motorstatus
		BEQ	DrillTest_Alarm		;motor av
		LDAA	DrillStatus
		BITA	#%100			;kollar bottenläge
		BNE	DrillTestDown_retur	;motor nere
		JSR	DELAY
		DECB
		BNE	DrillTest_loop
		
DrillTest_Alarm:
		LDAB	#2
		JSR	Alarm
		LDAB	#0
		RTS
		
DrillTestDown_retur:	
		LDAB	#1	
		RTS
		
DrillHole:
	JSR	DrillDown
	JSR	DrillDownTest
	PSHB
	JSR	DrillUp
	PULB
	RTS
	
RefPos:
	LDAB	DrillStatus
	BITB	#1
	BNE	RefPosReturn_inPos
	JSR	Step
	;TFR	B,X
	BITB	#$FF
	BNE	RefPos
	LDAB	#0
	RTS
	
RefPosReturn_inPos
	LDAB	#1
	RTS
	
NStep:
		BITB	#$FF
		BEQ	NStep_Success
		DECB
		PSHB
		JSR	Step ;Felet!
		BITB	#$FF
		BEQ	NStep_Failure
		PULB
		JMP	NStep
		
NStep_Success:
		LDAB	#1
		RTS

NStep_Failure
		PULB ;Korrigera stack
		LDAB #0
		RTS
		
DoAuto:
		JSR	RefPos
		BITB	#1
		BEQ	DoAuto_End
		JSR	MotorStart
		
DoAuto_Loop:
		;TFR	X,B
		LDAB	,X
		INX
		CMPB	#$FF
		BEQ	DoAuto_End
		JSR	NStep
		BITB	#$FF
		BEQ	DoAuto_End
		JSR	DrillHole
		BITB	#$FF
		BEQ	DoAuto_End
		JMP	DoAuto_Loop
		
		
DoAuto_End:
		JSR	MotorStopp
		RTS
	
DCShadow	RMB	1

One_tabell: FCB		%00000001,%00000010,%00000100,%00001000,%00010000,%00100000,%01000000,%10000000
Zero_tabell: FCB 	%11111110,%11111101,%11111011,%11110111,%11101111,%11011111,%10111111,%01111111